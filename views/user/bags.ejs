<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Products</title>
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1"
    />
    <link rel="stylesheet" href="/css/prducts.css"/>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@40,200,0,-25"
    />
    <script defer src="/js/home.js"></script>
  </head>
  <body>
    <div class="container banner-slide" id="bannerContainer" style="background-image: url('<%= banner.length > 0 ? banner[0].image : [] %>');">
      <nav class="navbar">
        <!-- Logo -->
         <a href="/">
        <img src="/images/Fiora1/1.png" class="logo" alt="Logo" />
      </a>
        <!-- Navigation links -->
        <ul class="nav-links">
          <li><a href="/">Home</a></li>
          <li><a href="#about">About</a></li>
          <li><a href="#contact">Contact Us</a></li>
        </ul>

        <!-- Search bar -->
        <input type="text" class="search-bar" placeholder="Search..." />

        <!-- Navigation icons -->
        <div class="nav-icons">
          <span class="material-symbols-outlined icon">favorite</span>
          <span class="material-symbols-outlined icon">person</span>
          <span class="material-symbols-outlined icon">local_mall</span>
        </div>

        <!-- Hamburger menu for mobile view -->
        <div class="hamburger" id="hamburger">
          <span class="material-symbols-outlined menu">menu</span>
        </div>

        <!-- Mobile menu -->
        <ul class="mobile-menu" id="mobile-menu">
          <li><a href="#home">Home</a></li>
          <li><a href="#about">About</a></li>
          <li><a href="#contact">Contact Us</a></li>
          <li>
            <a href="#wishlist"><i class="fa fa-heart"></i> Wishlist</a>
          </li>
          <li>
            <a href="#profile"><i class="fa fa-user"></i> Profile</a>
          </li>
          <li>
            <a href="#cart"><i class="fa fa-shopping-bag"></i> Cart</a>
          </li>
        </ul>
      </nav>

    </div>
    <!-- product section -->
    <h1 class="title">PRODUCTS</h1>

    <!-- Filter and Sort Section -->
    <div class="filters">
      <select id="sort-price" onchange="sortProducts()">
        <option value="default">Sort by Price</option>
        <option value="low-to-high">Low to High</option>
        <option value="high-to-low">High to Low</option>
      </select>
      <select id="filter-category" onchange="filterProducts()">
        <option value="all">All Categories</option>
        <% for (let i = 0; i < cat.length; i++) { %>
          <option value="<%= cat[i]._id %>"><%= cat[i].name %></option>
        <% } %>
      </select>
    </div>

    <!-- Product List -->
    <div class="product-card" onclick="openModal()">
      <!-- Product details here -->
      <div class="product-container" id="product-container">
        <% products.forEach(product => { %>
          <div class="product">
            <a href="/productDetails?id=<%= product._id %>" style="text-decoration: none;">
            <img src="<%= product.productImage[0] %>" alt="<%= product.productName %>">
          </a>
            <div class="wishlist-button"><span class="material-symbols-outlined">favorite</span></div>
            <div class="product-name"><%= product.productName %></div>
            <div class="product-price">
              <span class="original-price">₹<%= product.regularPrice %></span> 
              <span class="discount-price">₹<%= product.salePrice %></span>
            </div>
          </div>
        <% }); %>
      </div>
    </div>

    <!-- Load More Button -->

    <button class="load-more">Load More</button>


    <!-- Product Details Modal -->
    <div id="product-modal" class="product-modal">
      <div class="modal-content">
        <span class="close-btn">&times;</span>
        <div class="product-details">
          <!-- Product Image Holder (on left side) -->
          <div class="product-image">
            <div class="image-slider">
              <button class="prev" onclick="changeImage(-1)">&#10094;</button>
              <div class="slider-images"></div>
              <button class="next" onclick="changeImage(1)">&#10095;</button>
            </div>            
            <!-- Slider Navigation -->
            <button class="prev">&#10094;</button>
            <button class="next">&#10095;</button>
          </div>
          <!-- Product Info (on right side) -->
          <div class="product-info">
            <h2>CREAMY SHOULDER BAG</h2>
            <p class="price">
              <span class="discounted-price">₹5,999</span>
              <span class="original-price">₹7,999</span>
            </p>
            <!-- Add to Cart Button -->
            <div class="add-to-cart-con">
              <span class="material-symbols-outlined icon">favorite</span>
              <button class="add-to-cart">Add to Cart</button>
            </div>
            <p class="offers">
              Offers: <br />
              • Shop for ₹4999 or more & get a freebie worth ₹1999 <br />
              • Additional 5% off on all prepaid orders
            </p>
            <!-- Product Description -->
            <div class="description">
              <h3>Description</h3>
              <p>
                Beatrice is flawlessly optimum. This oversized Satchel Bag
                provides next level utility. Its pebble grain texture and
                impeccable design make it a standout piece. The bag offers ample
                space for you to carry your laptop, bottle, notebook, and much
                more. The zipper closure ensures your belongings are perfectly
                organized and stays in place. The adjustable and detachable
                strap provides versatile carrying options, making Beatrice the
                epitome of grace and functionality.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <a href="#" id="scrollToTopBtn" class="scroll-top-btn">↑</a>

    <!-- footer -->
    <footer>
      <div class="footer-container">
        <!-- Footer Column 1 -->
        <div class="footer-column">
          <img src="/images/Fiora1/2.png" class="logo" alt="Logo" />
          <p>
            Our timeless bag collections for daily & occasional use at
            affordable prices.
          </p>
          <div class="divider"></div>
          <p><strong>Email Us</strong></p>
          <p>faazilrahmaan@gmail.com</p>
          <div class="social-icons">
            <a href="#" aria-label="Instagram"
              ><img
                class="socialmedialogo"
                src="/images/logos/instagram.png"
                alt="Instagram"
            /></a>
            <a href="#" aria-label="Facebook"
              ><img
                class="socialmedialogo"
                src="/images/logos/facebook.png"
                alt="Facebook"
            /></a>
            <a href="#" aria-label="LinkedIn"
              ><img
                class="socialmedialogo"
                src="/images/logos/linkedin-logo.png"
                alt="LinkedIn"
            /></a>
          </div>
        </div>

        <!-- Footer Column 2 -->
        <div class="footer-column">
          <h3>Our Shop</h3>
          <ul>
            <li><a href="#">Terms & Policy</a></li>
            <li><a href="#">Contact Us</a></li>
            <li><a href="#">Gift Cards</a></li>
            <li><a href="#">Offers & Promotions</a></li>
          </ul>
        </div>

        <!-- Footer Column 3 -->
        <div class="footer-column">
          <h3>Store Locator</h3>
          <p>312, Awesome Street,</p>
          <p>Malappuram, Kerala.</p>
        </div>
      </div>
      <hr style="border-top: 0.1px solid #a2a2a2; width: 80%; margin: auto" />
      <div class="footer-bottom">designed by @faaasiill</div>
    </footer>
    <script>
      // Global variables to track state
let currentSort = 'default';
let currentCategory = 'all';
let currentSearch = '';
let currentPage = 1;
const productsPerPage = 16;

// Function to handle search
function handleSearch() {
  const searchInput = document.querySelector('.search-bar');
  
  // Debounce the search to avoid too many requests
  let debounceTimer;
  
  searchInput.addEventListener('input', () => {
    clearTimeout(debounceTimer);
    debounceTimer = setTimeout(async () => {
      currentSearch = searchInput.value.trim();
      currentPage = 1; // Reset to first page on new search
      await fetchProducts();
    }, 300); // Wait 300ms after user stops typing
  });

  // Handle Enter key
  searchInput.addEventListener('keypress', async (e) => {
    if (e.key === 'Enter') {
      currentSearch = searchInput.value.trim();
      currentPage = 1;
      await fetchProducts();
    }
  });
}

// Function to handle sorting
async function sortProducts() {
  const sortSelect = document.getElementById('sort-price');
  currentSort = sortSelect.value;
  currentPage = 1; // Reset to first page
  await fetchProducts();
}

// Function to handle filtering
async function filterProducts() {
  const filterSelect = document.getElementById('filter-category');
  currentCategory = filterSelect.value;
  currentPage = 1; // Reset to first page
  await fetchProducts();
}

// Unified function to fetch products with all parameters
async function fetchProducts() {
  try {
    const queryParams = new URLSearchParams({
      sort: currentSort,
      category: currentCategory,
      search: currentSearch,
      page: currentPage,
      limit: productsPerPage
    });

    const response = await fetch(`/api/products?${queryParams}`, {
      headers: {
        "Accept": "application/json",
      },
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    
    if (currentPage === 1) {
      updateProductDisplay(data.products);
    } else {
      appendProducts(data.products);
    }
    
    updateLoadMoreButton(data.hasMore);
    
    // Update URL with current filters (optional)
    updateURL();
    
    // Show/hide no results message
    toggleNoResultsMessage(data.products.length === 0);
  } catch (error) {
    console.error("Error fetching products:", error);
    showErrorMessage("Failed to fetch products. Please try again.");
  }
}

// Modified loadMore function
async function loadMore() {
  currentPage++;
  await fetchProducts();
}

// Helper function to update product display
function updateProductDisplay(products) {
  const productContainer = document.getElementById("product-container");
  productContainer.innerHTML = ''; // Clear existing products
  appendProducts(products);
}

// Helper function to append products to container
function appendProducts(products) {
  const productContainer = document.getElementById("product-container");
  
  products.forEach(product => {
    const productElement = document.createElement("div");
    productElement.classList.add("product");
    
    productElement.innerHTML = `
      <a href="/productDetails?id=${product._id}" style="text-decoration: none;">
        <img src="${product.productImage[0]}" alt="${product.productName}">
      </a>
      <div class="wishlist-button"><span class="material-symbols-outlined">favorite</span></div>
      <div class="product-name">${product.productName}</div>
      <div class="product-price">
        <span class="original-price">₹${product.regularPrice}</span> 
        <span class="discount-price">₹${product.salePrice}</span>
      </div>
    `;

    productContainer.appendChild(productElement);
  });
}

// Helper function to update Load More button visibility
function updateLoadMoreButton(hasMore) {
  const loadMoreButton = document.querySelector(".load-more");
  if (loadMoreButton) {
    loadMoreButton.style.display = hasMore ? "block" : "none";
  }
}

// Helper function to toggle no results message
function toggleNoResultsMessage(show) {
  let messageElement = document.getElementById('no-results-message');
  if (!messageElement) {
    messageElement = document.createElement('div');
    messageElement.id = 'no-results-message';
    messageElement.className = 'no-results';
    messageElement.textContent = 'No products found';
    const productContainer = document.getElementById("product-container");
    productContainer.parentNode.insertBefore(messageElement, productContainer);
  }
  messageElement.style.display = show ? 'block' : 'none';
}

// Helper function to show error message
function showErrorMessage(message) {
  // You can implement this based on your UI needs
  console.error(message);
}

// Helper function to update URL with current filters (optional)
function updateURL() {
  const params = new URLSearchParams();
  if (currentSort !== 'default') params.set('sort', currentSort);
  if (currentCategory !== 'all') params.set('category', currentCategory);
  if (currentSearch) params.set('search', currentSearch);
  
  const newURL = `${window.location.pathname}${params.toString() ? '?' + params.toString() : ''}`;
  window.history.replaceState({}, '', newURL);
}

// Event listeners
document.addEventListener("DOMContentLoaded", () => {
  const sortSelect = document.getElementById('sort-price');
  const filterSelect = document.getElementById('filter-category');
  const loadMoreButton = document.querySelector(".load-more");

  if (sortSelect) {
    sortSelect.addEventListener("change", sortProducts);
  }

  if (filterSelect) {
    filterSelect.addEventListener("change", filterProducts);
  }

  if (loadMoreButton) {
    loadMoreButton.addEventListener("click", loadMore);
  }

  // Initialize search functionality
  handleSearch();

  // Load initial products
  fetchProducts();





  document.addEventListener("scroll", function () {
  let scrollToTopBtn = document.getElementById("scrollToTopBtn");
  if (window.scrollY > 300) {
    scrollToTopBtn.style.display = "block";
  } else {
    scrollToTopBtn.style.display = "none";
  }
});

});
    </script>
  </body>
</html>
