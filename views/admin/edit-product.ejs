<%- include("../../views/partials/admin/header") %>

    <head>
        <style>

        </style>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
        <link rel="stylesheet" href="/css/edit-product.css">
    </head>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>


                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">


                    <div class="col-lg-6">
                        <div class="card mb-4">
                            <div class="card-body">
                                <!-- Fixed form submission -->
                                <form method="post" action="/admin/editProduct/<%= product._id %>"
                                    enctype="multipart/form-data" id="productForm">
                                    <!-- Product Details -->
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Product Name</label>
                                        <input type="text" name="productName" value="<%= product.productName %>"
                                            class="form-control border" id="product_name">
                                        <div id="productName-error" class="error-message"></div>
                                    </div>

                                    <div class="mb-4">
                                        <label class="form-label">Full Description</label>
                                        <input name="descriptionData" value="<%= product.description %>"
                                            class="form-control border">
                                        <div id="description-error" class="error-message"></div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Regular Price</label>
                                                <input placeholder="$" name="regularPrice" type="text"
                                                    value="<%= product.regularPrice %>" class="form-control border">
                                                <div id="regularPrice-error" class="error-message"></div>
                                            </div>
                                        </div>

                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Sale Price</label>
                                                <input name="salePrice" type="text" value="<%= product.salePrice %>"
                                                    class="form-control border">
                                                <div id="salePrice-error" class="error-message"></div>
                                            </div>
                                        </div>

                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Quantity</label>
                                                <input name="quantity" type="text" value="<%= product.quantity %>"
                                                    class="form-control border">
                                                <div id="quantity-error" class="error-message"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Color</label>
                                                <input name="color" type="text" value="<%= product.color %>"
                                                    class="form-control border">
                                                <div id="color-error" class="error-message"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card mb-4">
                                        <div class="card-body">
                                            <div class="row gx-2">
                                                <div class="col-sm-6 mb-3">
                                                    <label class="form-label">Category</label>
                                                    <select class="form-select border" style="width: 150px;"
                                                        name="category">
                                                        <% for(let i=0; i < cat.length; i++) { %>
                                                            <option value="<%= cat[i].name %>">
                                                                <%= cat[i].name %>
                                                            </option>
                                                            <% } %>
                                                    </select>
                                                    <div id="category-error" class="error-message"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card mb-2">
                                        <div class="card-header">
                                            <h4>Product Images</h4>
                                        </div>

                                        <!-- Existing Images -->
                                        <div class="existing-images-container">
                                            <% if(product.productImage && product.productImage.length> 0) { %>
                                                <% product.productImage.forEach((image, index)=> { %>
                                                    <div class="image-item" data-image="<%= image %>">
                                                        <input type="hidden" name="existingImages[]"
                                                            value="<%= image %>">
                                                        <img src="<%= image %>" alt="Product image"
                                                            onerror="this.src='/images/placeholder.jpg'">
                                                        <button type="button" class="delete-btn"
                                                            onclick="deleteImage('<%= image %>', '<%= product._id %>', this)">Ã—</button>
                                                    </div>
                                                    <% }); %>
                                                        <% } %>
                                        </div>


                                        <!-- New Image Upload -->
                                        <div class="card-body">
                                            <% for(let i=1; i <=4; i++) { %>
                                                <div class="image-upload-container">
                                                    <div class="preview-container">
                                                        <img src="" alt="" id="imgView<%= i %>" style="display: none;">
                                                    </div>

                                                    <div class="input-group">
                                                        <input type="file" class="form-control" name="images"
                                                            id="input<%= i %>" accept="image/png, image/jpeg, image/jpg"
                                                            onchange="handleImageUpload(event, '<%= i %>')">
                                                    </div>

                                                    <div class="cropper-container" id="cropperContainer<%= i %>"
                                                        style="display: none;">
                                                        <div class="cropper-wrapper">
                                                            <img src="" id="croppedImg<%= i %>" alt="">
                                                        </div>
                                                        <div class="mt-2">
                                                            <button type="button" id="saveButton<%= i %>"
                                                                class="btn btn-primary btn-sm">Save Cropped
                                                                Image</button>
                                                            <button type="button" class="btn btn-secondary btn-sm"
                                                                onclick="cancelCropping('<%= i %>')">Cancel</button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <% } %>
                                        </div>
                                    </div>

                                    <!-- Notification -->
                                    <div id="notification" class="notification"></div>

                                    <button type="submit" class="btn btn-primary btn-md rounded  font-sm hover-up"
                                        id="updatebtn">Update</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>


        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit();
            }
        }




        function validateForm() {
            let imageDatas = false
            console.log("validate form");
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementsByName('descriptionData')[0].value;
            const brand = document.getElementsByName('brand')[0].value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const color = document.getElementsByName('color')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1')
            const quantity = document.getElementsByName('quantity')
            imageDatas = document.getElementById("imageDatas")?.value;
            let isValid = true;
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }

            if (description === '') {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }


            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }




            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }
            if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (color.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }
            if (!imageDatas && images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }
            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }


        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
            const errorMessage = document.getElementById('errorMessage');


        }


        let croppers = {};
        function handleImageUpload(event, index) {
            const input = event.target;
            const file = input.files[0];

            if (!file) return;

            // Validate file type and size
            if (!file.type.match('image.*')) {
                showNotification('Please select an image file', 'error');
                input.value = '';
                return;
            }

            if (file.size > 5 * 1024 * 1024) { // 5MB limit
                showNotification('Image size should be less than 5MB', 'error');
                input.value = '';
                return;
            }

            const previewImg = document.getElementById(`imgView${index}`);
            const cropperContainer = document.getElementById(`cropperContainer${index}`);

            // Destroy existing cropper
            if (croppers[index]) {
                croppers[index].destroy();
                croppers[index] = null;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                previewImg.src = e.target.result;
                previewImg.style.display = 'block';

                // Initialize Cropper with free aspect ratio
                croppers[index] = new Cropper(previewImg, {
                    aspectRatio: NaN,  
                    viewMode: 2,
                    guides: true,
                    background: true,
                    autoCropArea: 0.8,
                    zoomable: true,
                    responsive: true,
                    restore: true,
                    checkCrossOrigin: false,
                    cropBoxResizable: true,
                    dragMode: 'move',
                    minCropBoxWidth: 50,
                    minCropBoxHeight: 50,
                    rotatable: true,
                    scalable: true
                });

                cropperContainer.style.display = 'block';
            };
            reader.readAsDataURL(file);
        }


        function cancelCropping(index) {
            const input = document.getElementById(`input${index}`);
            const previewImg = document.getElementById(`imgView${index}`);
            const cropperContainer = document.getElementById(`cropperContainer${index}`);

            input.value = '';
            previewImg.src = '';
            previewImg.style.display = 'none';
            cropperContainer.style.display = 'none';

            if (croppers[index]) {
                croppers[index].destroy();
                croppers[index] = null;
            }
        }


        function deleteImage(imageId, productId, button) {
            Swal.fire({
                title: "Are you sure?",
                text: "This action cannot be undone!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    const imageItem = button.closest('.image-item');

                    $.ajax({
                        url: "/admin/deleteImage",
                        method: 'POST',
                        data: {
                            imageNameToServer: imageId,
                            productIdToServer: productId
                        },
                        beforeSend: function () {
                            button.disabled = true;
                        },
                        success: function (response) {
                            if (response.status) {
                                imageItem.remove();
                                Swal.fire({
                                    title: "Deleted!",
                                    text: "Image deleted successfully",
                                    icon: "success",
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else {
                                Swal.fire({
                                    title: "Error!",
                                    text: response.message || "Failed to delete image",
                                    icon: "error"
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "An error occurred while deleting the image",
                                icon: "error"
                            });
                            button.disabled = false;
                        }
                    });
                }
            });
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';

            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        }

        // Initialize save buttons
        document.addEventListener('DOMContentLoaded', function () {
            for (let i = 1; i <= 4; i++) {
                document.getElementById(`saveButton${i}`).addEventListener('click', function () {
                    if (!croppers[i]) return;

                    const croppedCanvas = croppers[i].getCroppedCanvas({
                        width: 800,    
                        height: 800,   
                        imageSmoothingEnabled: true,
                        imageSmoothingQuality: 'high'
                    });

                    croppedCanvas.toBlob(function (blob) {
                        const fileName = `product-image-${Date.now()}-${i}.jpg`;
                        const file = new File([blob], fileName, { type: 'image/jpeg' });

                        // Update file input
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        document.getElementById(`input${i}`).files = dataTransfer.files;

                        // Update preview
                        const croppedImg = document.getElementById(`croppedImg${i}`);
                        croppedImg.src = croppedCanvas.toDataURL('image/jpeg');

                        // Hide cropper
                        document.getElementById(`cropperContainer${i}`).style.display = 'none';

                        // Cleanup
                        croppers[i].destroy();
                        croppers[i] = null;

                        showNotification('Image cropped successfully', 'success');
                    }, 'image/jpeg', 0.9);
                });
            }
        });


    </script>


    <%- include("../../views/partials/admin/footer") %>